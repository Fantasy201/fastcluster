# version format
version: 1.1.26-{build}

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    - PYTHON_VERSION: "2.7"
      PYTHON: "C:\\Miniconda"
      PYTHON_ARCH: "32"

    - PYTHON_VERSION: "2.7"
      PYTHON: "C:\\Miniconda-x64"
      PYTHON_ARCH: "64"

    - PYTHON_VERSION: "3.6"
      PYTHON: "C:\\Miniconda36"
      PYTHON_ARCH: "32"

    - PYTHON_VERSION: "3.6"
      PYTHON: "C:\\Miniconda36-x64"
      PYTHON_ARCH: "64"

    - PYTHON_VERSION: "3.7"
      PYTHON: "C:\\Miniconda37"
      PYTHON_ARCH: "32"

    - PYTHON_VERSION: "3.7"
      PYTHON: "C:\\Miniconda37-x64"
      PYTHON_ARCH: "64"

    - PYTHON_VERSION: "3.8"
      PYTHON: "C:\\Miniconda3"
      PYTHON_ARCH: "32"

    - PYTHON_VERSION: "3.8"
      PYTHON: "C:\\Miniconda3-x64"
      PYTHON_ARCH: "64"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Miniconda
  - ps: appveyor\install.ps1

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - ECHO "%PATH%"
  - "SET PATH=%PYTHON%;%PATH%"

  - "conda create -q -y --name py%PYTHON_VERSION% python=%PYTHON_VERSION%"
  - "conda install -q -y --name py%PYTHON_VERSION% pip wheel"
  - "conda activate py%PYTHON_VERSION%"

  # Check that we have the expected version and architecture for Python
  - "python -c \"import sys; print(sys.executable)\""
  - "%CMD_IN_ENV% python -c \"import sys; print(sys.executable)\""
  - "python --version"
  - "%CMD_IN_ENV% python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

build_script:
  # Build the compiled extension
  - "%CMD_IN_ENV% pip --version"
  - "%CMD_IN_ENV% pip install .[test]"

test_script:
  # Run the project tests
  - "%CMD_IN_ENV% python setup.py test"

after_test:
  # If tests are successful, create binary packages for the project.
  - "%CMD_IN_ENV% pip wheel -w dist --no-deps ."
  - ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#
